{"id":"d1b55167ff5d1acb9c7f1c7de4358b45","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"contracts/DumbExample.sol":{"content":"//SPDX-License-Identifier: Unlicense\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"./Truster.sol\";\n\n/**\n * @title Code Trust\n * @author Miguel Gomez Carpena\n */\ncontract DumbExample is Truster {\n  constructor(ICodeTrust systemCodeTrust) {\n    _codeTrust = systemCodeTrust;\n  }\n\n  function trustOneContract(address contractToTrust) public {\n    _codeTrust.trustCodeAt(contractToTrust, 0);\n  }\n\n  function checkIfTrusted(address contractToCheck) public view returns (bool trusted) {\n    return _codeTrust.isTrustedCode(contractToCheck, address(0), 0);\n  }\n}\n"},"contracts/interfaces/ICodeTrust.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\n/**\n * @title (Interface) Code Trust\n * @author Miguel Gomez Carpena\n * @dev Interface of contract CodeTrust\n */\ninterface ICodeTrust {\n  /**\n   * @notice any sender can use this method to trust other address (should be a contract address)\n   * @dev it checks if the address is a contract address or a EOA comparing the msg.sender and tx.origin to force having duration or not\n   * @param trustedCode the address of the contract address to be trusted\n   * @param duration (optional) [1] datetime to trust this contract code. Mandatory if this call comes from a EOA. If sender is another contract, can be 1 meaning infinite duration\n   */\n  function trustCodeAt(address trustedCode, uint256 duration) external;\n\n  /**\n   * @notice simple method to explicitly untrust a previously trusted contract\n   * @param trustedCode the address of the contract to be untrusted\n   */\n  function untrustCodeAt(address trustedCode) external;\n\n  /**\n   * @notice method to check if a contract is trusted by any address\n   * @param trustedCode the address of the contract to be checked\n   * @param by (optional) [sender] the address of the one that is trusting the contract or not (truster?? X-))\n   * @param extTimestamp (optional) [block.timestamp] external timestamp to use as time reference\n   * @return bool wheater the contract is trusted by \"by\" address or not\n   */\n  function isTrustedCode(\n    address trustedCode,\n    address by,\n    uint256 extTimestamp\n  ) external view returns (bool);\n}\n"},"contracts/Truster.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\n\nimport \"./interfaces/ICodeTrust.sol\";\n\n/**\n * @title Truster\n * @author Miguel Gomez Carpena\n * @notice This contract provides a framework for implementing code trust in decentralized applications.\n *         Contracts that inherit from this contract can enforce trust by implementing specific trust mechanisms.\n */\nabstract contract Truster {\n  ICodeTrust internal _codeTrust;\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"evmVersion":"london","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"contracts/DumbExample.sol":{"ast":{"absolutePath":"contracts/DumbExample.sol","exportedSymbols":{"DumbExample":[48],"ICodeTrust":[86],"Truster":[56]},"id":49,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"37:31:0"},{"absolutePath":"contracts/Truster.sol","file":"./Truster.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":49,"sourceUnit":57,"src":"70:23:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4,"name":"Truster","nameLocations":["180:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":56,"src":"180:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"180:7:0"}],"canonicalName":"DumbExample","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"95:60:0","text":" @title Code Trust\n @author Miguel Gomez Carpena"},"fullyImplemented":true,"id":48,"linearizedBaseContracts":[48,56],"name":"DumbExample","nameLocation":"165:11:0","nodeType":"ContractDefinition","nodes":[{"body":{"id":15,"nodeType":"Block","src":"232:39:0","statements":[{"expression":{"id":13,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11,"name":"_codeTrust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"238:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":12,"name":"systemCodeTrust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"251:15:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"src":"238:28:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"id":14,"nodeType":"ExpressionStatement","src":"238:28:0"}]},"id":16,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8,"mutability":"mutable","name":"systemCodeTrust","nameLocation":"215:15:0","nodeType":"VariableDeclaration","scope":16,"src":"204:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"},"typeName":{"id":7,"nodeType":"UserDefinedTypeName","pathNode":{"id":6,"name":"ICodeTrust","nameLocations":["204:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"204:10:0"},"referencedDeclaration":86,"src":"204:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"visibility":"internal"}],"src":"203:28:0"},"returnParameters":{"id":10,"nodeType":"ParameterList","parameters":[],"src":"232:0:0"},"scope":48,"src":"192:79:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":28,"nodeType":"Block","src":"333:53:0","statements":[{"expression":{"arguments":[{"id":24,"name":"contractToTrust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"362:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":25,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"379:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":21,"name":"_codeTrust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"339:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"id":23,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"350:11:0","memberName":"trustCodeAt","nodeType":"MemberAccess","referencedDeclaration":67,"src":"339:22:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"339:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27,"nodeType":"ExpressionStatement","src":"339:42:0"}]},"functionSelector":"75c29b4d","id":29,"implemented":true,"kind":"function","modifiers":[],"name":"trustOneContract","nameLocation":"284:16:0","nodeType":"FunctionDefinition","parameters":{"id":19,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"contractToTrust","nameLocation":"309:15:0","nodeType":"VariableDeclaration","scope":29,"src":"301:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"301:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"300:25:0"},"returnParameters":{"id":20,"nodeType":"ParameterList","parameters":[],"src":"333:0:0"},"scope":48,"src":"275:111:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":46,"nodeType":"Block","src":"474:74:0","statements":[{"expression":{"arguments":[{"id":38,"name":"contractToCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"512:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":41,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"537:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":40,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"529:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":39,"name":"address","nodeType":"ElementaryTypeName","src":"529:7:0","typeDescriptions":{}}},"id":42,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"529:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":43,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"541:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":36,"name":"_codeTrust","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":55,"src":"487:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"498:13:0","memberName":"isTrustedCode","nodeType":"MemberAccess","referencedDeclaration":85,"src":"487:24:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view external returns (bool)"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"487:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":35,"id":45,"nodeType":"Return","src":"480:63:0"}]},"functionSelector":"49dbfe82","id":47,"implemented":true,"kind":"function","modifiers":[],"name":"checkIfTrusted","nameLocation":"399:14:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":31,"mutability":"mutable","name":"contractToCheck","nameLocation":"422:15:0","nodeType":"VariableDeclaration","scope":47,"src":"414:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"414:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"413:25:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"trusted","nameLocation":"465:7:0","nodeType":"VariableDeclaration","scope":47,"src":"460:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":33,"name":"bool","nodeType":"ElementaryTypeName","src":"460:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"459:14:0"},"scope":48,"src":"390:158:0","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":49,"src":"156:394:0","usedErrors":[]}],"src":"37:514:0"},"id":0},"contracts/Truster.sol":{"ast":{"absolutePath":"contracts/Truster.sol","exportedSymbols":{"ICodeTrust":[86],"Truster":[56]},"id":57,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":50,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:1"},{"absolutePath":"contracts/interfaces/ICodeTrust.sol","file":"./interfaces/ICodeTrust.sol","id":51,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":57,"sourceUnit":87,"src":"65:37:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Truster","contractDependencies":[],"contractKind":"contract","documentation":{"id":52,"nodeType":"StructuredDocumentation","src":"104:276:1","text":" @title Truster\n @author Miguel Gomez Carpena\n @notice This contract provides a framework for implementing code trust in decentralized applications.\n         Contracts that inherit from this contract can enforce trust by implementing specific trust mechanisms."},"fullyImplemented":true,"id":56,"linearizedBaseContracts":[56],"name":"Truster","nameLocation":"399:7:1","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":55,"mutability":"mutable","name":"_codeTrust","nameLocation":"431:10:1","nodeType":"VariableDeclaration","scope":56,"src":"411:30:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"},"typeName":{"id":54,"nodeType":"UserDefinedTypeName","pathNode":{"id":53,"name":"ICodeTrust","nameLocations":["411:10:1"],"nodeType":"IdentifierPath","referencedDeclaration":86,"src":"411:10:1"},"referencedDeclaration":86,"src":"411:10:1","typeDescriptions":{"typeIdentifier":"t_contract$_ICodeTrust_$86","typeString":"contract ICodeTrust"}},"visibility":"internal"}],"scope":57,"src":"381:63:1","usedErrors":[]}],"src":"32:413:1"},"id":1},"contracts/interfaces/ICodeTrust.sol":{"ast":{"absolutePath":"contracts/interfaces/ICodeTrust.sol","exportedSymbols":{"ICodeTrust":[86]},"id":87,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":58,"literals":["solidity",">=","0.8",".0","<","0.9",".0"],"nodeType":"PragmaDirective","src":"32:31:2"},{"abstract":false,"baseContracts":[],"canonicalName":"ICodeTrust","contractDependencies":[],"contractKind":"interface","documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"65:112:2","text":" @title (Interface) Code Trust\n @author Miguel Gomez Carpena\n @dev Interface of contract CodeTrust"},"fullyImplemented":false,"id":86,"linearizedBaseContracts":[86],"name":"ICodeTrust","nameLocation":"188:10:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"203:499:2","text":" @notice any sender can use this method to trust other address (should be a contract address)\n @dev it checks if the address is a contract address or a EOA comparing the msg.sender and tx.origin to force having duration or not\n @param trustedCode the address of the contract address to be trusted\n @param duration (optional) [1] datetime to trust this contract code. Mandatory if this call comes from a EOA. If sender is another contract, can be 1 meaning infinite duration"},"functionSelector":"920517e6","id":67,"implemented":false,"kind":"function","modifiers":[],"name":"trustCodeAt","nameLocation":"714:11:2","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"trustedCode","nameLocation":"734:11:2","nodeType":"VariableDeclaration","scope":67,"src":"726:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"726:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":64,"mutability":"mutable","name":"duration","nameLocation":"755:8:2","nodeType":"VariableDeclaration","scope":67,"src":"747:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"747:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:39:2"},"returnParameters":{"id":66,"nodeType":"ParameterList","parameters":[],"src":"773:0:2"},"scope":86,"src":"705:69:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"778:156:2","text":" @notice simple method to explicitly untrust a previously trusted contract\n @param trustedCode the address of the contract to be untrusted"},"functionSelector":"83e5e640","id":73,"implemented":false,"kind":"function","modifiers":[],"name":"untrustCodeAt","nameLocation":"946:13:2","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"trustedCode","nameLocation":"968:11:2","nodeType":"VariableDeclaration","scope":73,"src":"960:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"960:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"959:21:2"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[],"src":"989:0:2"},"scope":86,"src":"937:53:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":74,"nodeType":"StructuredDocumentation","src":"994:426:2","text":" @notice method to check if a contract is trusted by any address\n @param trustedCode the address of the contract to be checked\n @param by (optional) [sender] the address of the one that is trusting the contract or not (truster?? X-))\n @param extTimestamp (optional) [block.timestamp] external timestamp to use as time reference\n @return bool wheater the contract is trusted by \"by\" address or not"},"functionSelector":"4f940270","id":85,"implemented":false,"kind":"function","modifiers":[],"name":"isTrustedCode","nameLocation":"1432:13:2","nodeType":"FunctionDefinition","parameters":{"id":81,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"trustedCode","nameLocation":"1459:11:2","nodeType":"VariableDeclaration","scope":85,"src":"1451:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":75,"name":"address","nodeType":"ElementaryTypeName","src":"1451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"by","nameLocation":"1484:2:2","nodeType":"VariableDeclaration","scope":85,"src":"1476:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":77,"name":"address","nodeType":"ElementaryTypeName","src":"1476:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"extTimestamp","nameLocation":"1500:12:2","nodeType":"VariableDeclaration","scope":85,"src":"1492:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1492:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1445:71:2"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":85,"src":"1540:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":82,"name":"bool","nodeType":"ElementaryTypeName","src":"1540:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1539:6:2"},"scope":86,"src":"1423:123:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":87,"src":"178:1370:2","usedErrors":[]}],"src":"32:1517:2"},"id":2}},"contracts":{"contracts/DumbExample.sol":{"DumbExample":{"abi":[{"inputs":[{"internalType":"contract ICodeTrust","name":"systemCodeTrust","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"contractToCheck","type":"address"}],"name":"checkIfTrusted","outputs":[{"internalType":"bool","name":"trusted","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"contractToTrust","type":"address"}],"name":"trustOneContract","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_16":{"entryPoint":null,"id":16,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_contract$_ICodeTrust_$86_fromMemory":{"entryPoint":84,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:323:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:209:3","statements":[{"body":{"nodeType":"YulBlock","src":"158:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"167:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"170:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:3"},"nodeType":"YulFunctionCall","src":"160:12:3"},"nodeType":"YulExpressionStatement","src":"160:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:3"},"nodeType":"YulFunctionCall","src":"129:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:3"},"nodeType":"YulFunctionCall","src":"125:32:3"},"nodeType":"YulIf","src":"122:52:3"},{"nodeType":"YulVariableDeclaration","src":"183:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"202:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"196:5:3"},"nodeType":"YulFunctionCall","src":"196:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"187:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"275:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"284:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"287:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"277:6:3"},"nodeType":"YulFunctionCall","src":"277:12:3"},"nodeType":"YulExpressionStatement","src":"277:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"234:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"245:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"260:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"265:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"256:3:3"},"nodeType":"YulFunctionCall","src":"256:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"269:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"252:3:3"},"nodeType":"YulFunctionCall","src":"252:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"241:3:3"},"nodeType":"YulFunctionCall","src":"241:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"231:2:3"},"nodeType":"YulFunctionCall","src":"231:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"224:6:3"},"nodeType":"YulFunctionCall","src":"224:50:3"},"nodeType":"YulIf","src":"221:70:3"},{"nodeType":"YulAssignment","src":"300:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"310:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"300:6:3"}]}]},"name":"abi_decode_tuple_t_contract$_ICodeTrust_$86_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"78:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"89:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"101:6:3","type":""}],"src":"14:307:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_contract$_ICodeTrust_$86_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161027f38038061027f83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6101ec806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806349dbfe821461003b57806375c29b4d14610062575b600080fd5b61004e610049366004610164565b610077565b604051901515815260200160405180910390f35b610075610070366004610164565b6100fa565b005b600080546040516304f9402760e41b81526001600160a01b038481166004830152602482018490526044820184905290911690634f94027090606401602060405180830381865afa1580156100d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f49190610194565b92915050565b600080546040516349028bf360e11b81526001600160a01b038481166004830152602482019390935291169063920517e690604401600060405180830381600087803b15801561014957600080fd5b505af115801561015d573d6000803e3d6000fd5b5050505050565b60006020828403121561017657600080fd5b81356001600160a01b038116811461018d57600080fd5b9392505050565b6000602082840312156101a657600080fd5b8151801515811461018d57600080fdfea26469706673582212200d0b0f29558008d495166fff2aa7d9ad1b66c5ea8a7e11a2102faad2fc45f25064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x27F CODESIZE SUB DUP1 PUSH2 0x27F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x84 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1EC DUP1 PUSH2 0x93 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49DBFE82 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x75C29B4D EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F94027 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x4F940270 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x49028BF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x920517E6 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SIGNEXTEND 0xF 0x29 SSTORE DUP1 ADDMOD 0xD4 SWAP6 AND PUSH16 0xFF2AA7D9AD1B66C5EA8A7E11A2102FAA 0xD2 0xFC GASLIMIT CALLCODE POP PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"156:394:0:-:0;;;192:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;238:10;:28;;-1:-1:-1;;;;;;238:28:0;-1:-1:-1;;;;;238:28:0;;;;;;;;;;156:394;;14:307:3;101:6;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:3;;231:42;;221:70;;287:1;284;277:12;221:70;310:5;14:307;-1:-1:-1;;;14:307:3:o;:::-;156:394:0;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkIfTrusted_47":{"entryPoint":119,"id":47,"parameterSlots":1,"returnSlots":1},"@trustOneContract_29":{"entryPoint":250,"id":29,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address":{"entryPoint":356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1451:3","statements":[{"nodeType":"YulBlock","src":"6:3:3","statements":[]},{"body":{"nodeType":"YulBlock","src":"84:216:3","statements":[{"body":{"nodeType":"YulBlock","src":"130:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"139:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"142:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"132:6:3"},"nodeType":"YulFunctionCall","src":"132:12:3"},"nodeType":"YulExpressionStatement","src":"132:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"105:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"114:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"101:3:3"},"nodeType":"YulFunctionCall","src":"101:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"126:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"97:3:3"},"nodeType":"YulFunctionCall","src":"97:32:3"},"nodeType":"YulIf","src":"94:52:3"},{"nodeType":"YulVariableDeclaration","src":"155:36:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"181:9:3"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"168:12:3"},"nodeType":"YulFunctionCall","src":"168:23:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"159:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:3"},"nodeType":"YulFunctionCall","src":"256:12:3"},"nodeType":"YulExpressionStatement","src":"256:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"213:5:3"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"224:5:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"239:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"244:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"235:3:3"},"nodeType":"YulFunctionCall","src":"235:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"231:3:3"},"nodeType":"YulFunctionCall","src":"231:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"220:3:3"},"nodeType":"YulFunctionCall","src":"220:31:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"210:2:3"},"nodeType":"YulFunctionCall","src":"210:42:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"203:6:3"},"nodeType":"YulFunctionCall","src":"203:50:3"},"nodeType":"YulIf","src":"200:70:3"},{"nodeType":"YulAssignment","src":"279:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:3"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"61:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"73:6:3","type":""}],"src":"14:286:3"},{"body":{"nodeType":"YulBlock","src":"400:92:3","statements":[{"nodeType":"YulAssignment","src":"410:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:3"},"nodeType":"YulFunctionCall","src":"418:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:3"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:3"},"nodeType":"YulFunctionCall","src":"470:14:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:3"},"nodeType":"YulFunctionCall","src":"463:22:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:3"},"nodeType":"YulFunctionCall","src":"445:41:3"},"nodeType":"YulExpressionStatement","src":"445:41:3"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:3","type":""}],"src":"305:187:3"},{"body":{"nodeType":"YulBlock","src":"662:218:3","statements":[{"nodeType":"YulAssignment","src":"672:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"684:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"695:2:3","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"680:3:3"},"nodeType":"YulFunctionCall","src":"680:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"672:4:3"}]},{"nodeType":"YulVariableDeclaration","src":"707:29:3","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"725:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"730:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"721:3:3"},"nodeType":"YulFunctionCall","src":"721:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"734:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"717:3:3"},"nodeType":"YulFunctionCall","src":"717:19:3"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"711:2:3","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"752:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"767:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"775:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"763:3:3"},"nodeType":"YulFunctionCall","src":"763:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"745:6:3"},"nodeType":"YulFunctionCall","src":"745:34:3"},"nodeType":"YulExpressionStatement","src":"745:34:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"799:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"810:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:3"},"nodeType":"YulFunctionCall","src":"795:18:3"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"819:6:3"},{"name":"_1","nodeType":"YulIdentifier","src":"827:2:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"815:3:3"},"nodeType":"YulFunctionCall","src":"815:15:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"788:6:3"},"nodeType":"YulFunctionCall","src":"788:43:3"},"nodeType":"YulExpressionStatement","src":"788:43:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"851:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"862:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"847:3:3"},"nodeType":"YulFunctionCall","src":"847:18:3"},{"name":"value2","nodeType":"YulIdentifier","src":"867:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"840:6:3"},"nodeType":"YulFunctionCall","src":"840:34:3"},"nodeType":"YulExpressionStatement","src":"840:34:3"}]},"name":"abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"615:9:3","type":""},{"name":"value2","nodeType":"YulTypedName","src":"626:6:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"634:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"642:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"653:4:3","type":""}],"src":"497:383:3"},{"body":{"nodeType":"YulBlock","src":"963:199:3","statements":[{"body":{"nodeType":"YulBlock","src":"1009:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1018:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1021:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1011:6:3"},"nodeType":"YulFunctionCall","src":"1011:12:3"},"nodeType":"YulExpressionStatement","src":"1011:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"984:7:3"},{"name":"headStart","nodeType":"YulIdentifier","src":"993:9:3"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"980:3:3"},"nodeType":"YulFunctionCall","src":"980:23:3"},{"kind":"number","nodeType":"YulLiteral","src":"1005:2:3","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"976:3:3"},"nodeType":"YulFunctionCall","src":"976:32:3"},"nodeType":"YulIf","src":"973:52:3"},{"nodeType":"YulVariableDeclaration","src":"1034:29:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1053:9:3"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1047:5:3"},"nodeType":"YulFunctionCall","src":"1047:16:3"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1038:5:3","type":""}]},{"body":{"nodeType":"YulBlock","src":"1116:16:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1125:1:3","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1128:1:3","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1118:6:3"},"nodeType":"YulFunctionCall","src":"1118:12:3"},"nodeType":"YulExpressionStatement","src":"1118:12:3"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1085:5:3"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1106:5:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1099:6:3"},"nodeType":"YulFunctionCall","src":"1099:13:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1092:6:3"},"nodeType":"YulFunctionCall","src":"1092:21:3"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1082:2:3"},"nodeType":"YulFunctionCall","src":"1082:32:3"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1075:6:3"},"nodeType":"YulFunctionCall","src":"1075:40:3"},"nodeType":"YulIf","src":"1072:60:3"},{"nodeType":"YulAssignment","src":"1141:15:3","value":{"name":"value","nodeType":"YulIdentifier","src":"1151:5:3"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1141:6:3"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"929:9:3","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"940:7:3","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"952:6:3","type":""}],"src":"885:277:3"},{"body":{"nodeType":"YulBlock","src":"1304:145:3","statements":[{"nodeType":"YulAssignment","src":"1314:26:3","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1326:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:3","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1322:3:3"},"nodeType":"YulFunctionCall","src":"1322:18:3"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1314:4:3"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1356:9:3"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1371:6:3"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1387:3:3","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1392:1:3","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1383:3:3"},"nodeType":"YulFunctionCall","src":"1383:11:3"},{"kind":"number","nodeType":"YulLiteral","src":"1396:1:3","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1379:3:3"},"nodeType":"YulFunctionCall","src":"1379:19:3"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1367:3:3"},"nodeType":"YulFunctionCall","src":"1367:32:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1349:6:3"},"nodeType":"YulFunctionCall","src":"1349:51:3"},"nodeType":"YulExpressionStatement","src":"1349:51:3"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:3"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:3","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:3"},"nodeType":"YulFunctionCall","src":"1416:18:3"},{"name":"value1","nodeType":"YulIdentifier","src":"1436:6:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1409:6:3"},"nodeType":"YulFunctionCall","src":"1409:34:3"},"nodeType":"YulExpressionStatement","src":"1409:34:3"}]},"name":"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1265:9:3","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1276:6:3","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1284:6:3","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1295:4:3","type":""}],"src":"1167:282:3"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_rational_0_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}","id":3,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c806349dbfe821461003b57806375c29b4d14610062575b600080fd5b61004e610049366004610164565b610077565b604051901515815260200160405180910390f35b610075610070366004610164565b6100fa565b005b600080546040516304f9402760e41b81526001600160a01b038481166004830152602482018490526044820184905290911690634f94027090606401602060405180830381865afa1580156100d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100f49190610194565b92915050565b600080546040516349028bf360e11b81526001600160a01b038481166004830152602482019390935291169063920517e690604401600060405180830381600087803b15801561014957600080fd5b505af115801561015d573d6000803e3d6000fd5b5050505050565b60006020828403121561017657600080fd5b81356001600160a01b038116811461018d57600080fd5b9392505050565b6000602082840312156101a657600080fd5b8151801515811461018d57600080fdfea26469706673582212200d0b0f29558008d495166fff2aa7d9ad1b66c5ea8a7e11a2102faad2fc45f25064736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x49DBFE82 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x75C29B4D EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x164 JUMP JUMPDEST PUSH2 0xFA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4F94027 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x4F940270 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF4 SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x49028BF3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 AND SWAP1 PUSH4 0x920517E6 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD SIGNEXTEND 0xF 0x29 SSTORE DUP1 ADDMOD 0xD4 SWAP6 AND PUSH16 0xFF2AA7D9AD1B66C5EA8A7E11A2102FAA 0xD2 0xFC GASLIMIT CALLCODE POP PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"156:394:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;390:158;;;;;;:::i;:::-;;:::i;:::-;;;470:14:3;;463:22;445:41;;433:2;418:18;390:158:0;;;;;;;275:111;;;;;;:::i;:::-;;:::i;:::-;;390:158;460:12;487:10;;:56;;-1:-1:-1;;;487:56:0;;-1:-1:-1;;;;;763:15:3;;;487:56:0;;;745:34:3;795:18;;;788:43;;;847:18;;;840:34;;;487:10:0;;;;:24;;680:18:3;;487:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;480:63;390:158;-1:-1:-1;;390:158:0:o;275:111::-;339:10;;;:42;;-1:-1:-1;;;339:42:0;;-1:-1:-1;;;;;1367:32:3;;;339:42:0;;;1349:51:3;1416:18;;;1409:34;;;;339:10:0;;;:22;;1322:18:3;;339:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:111;:::o;14:286:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:3;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:3:o;885:277::-;952:6;1005:2;993:9;984:7;980:23;976:32;973:52;;;1021:1;1018;1011:12;973:52;1053:9;1047:16;1106:5;1099:13;1092:21;1085:5;1082:32;1072:60;;1128:1;1125;1118:12"},"methodIdentifiers":{"checkIfTrusted(address)":"49dbfe82","trustOneContract(address)":"75c29b4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ICodeTrust\",\"name\":\"systemCodeTrust\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractToCheck\",\"type\":\"address\"}],\"name\":\"checkIfTrusted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"trusted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractToTrust\",\"type\":\"address\"}],\"name\":\"trustOneContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Miguel Gomez Carpena\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Code Trust\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DumbExample.sol\":\"DumbExample\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DumbExample.sol\":{\"keccak256\":\"0x1db80f746020428faa17fac37e4f3678fe9281e092634ceb01d6b6b478c30de9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://de736acb5e5e5bc902aaab00824360f08e3f8a5f24564721b69cbc8ee8648e3f\",\"dweb:/ipfs/QmPyLBwpeZMWGqXiX5e3jZCgq2aM1ZbkUHzAZNsMCXNKTb\"]},\"contracts/Truster.sol\":{\"keccak256\":\"0x5224ef19d9ee47bbcc5a144e89b9b76b46364a54a49792465442ddbea0637d24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://323fbf785c456b491ea026f2d83ac45ba1c8f0327f5973e9e079a1e73b5ae476\",\"dweb:/ipfs/QmeLcynBM1XyPybMgiDhV1cD5ZcMHEvcc37A1CKwuBtQE8\"]},\"contracts/interfaces/ICodeTrust.sol\":{\"keccak256\":\"0xb6c5cfa07c109f72f1afa01dffae1e973286768ecba581a1427c772d70a32571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f454d884506b2d3d02aa7ee00b5f100513eca9aca1b1dfde694cba4e45774bc\",\"dweb:/ipfs/QmRs9srhgUijRQN9m4PVqvUxZNpTBEvrnmJWbkboRUmUS4\"]}},\"version\":1}"}},"contracts/Truster.sol":{"Truster":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Miguel Gomez Carpena\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Truster\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract provides a framework for implementing code trust in decentralized applications.         Contracts that inherit from this contract can enforce trust by implementing specific trust mechanisms.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Truster.sol\":\"Truster\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Truster.sol\":{\"keccak256\":\"0x5224ef19d9ee47bbcc5a144e89b9b76b46364a54a49792465442ddbea0637d24\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://323fbf785c456b491ea026f2d83ac45ba1c8f0327f5973e9e079a1e73b5ae476\",\"dweb:/ipfs/QmeLcynBM1XyPybMgiDhV1cD5ZcMHEvcc37A1CKwuBtQE8\"]},\"contracts/interfaces/ICodeTrust.sol\":{\"keccak256\":\"0xb6c5cfa07c109f72f1afa01dffae1e973286768ecba581a1427c772d70a32571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f454d884506b2d3d02aa7ee00b5f100513eca9aca1b1dfde694cba4e45774bc\",\"dweb:/ipfs/QmRs9srhgUijRQN9m4PVqvUxZNpTBEvrnmJWbkboRUmUS4\"]}},\"version\":1}"}},"contracts/interfaces/ICodeTrust.sol":{"ICodeTrust":{"abi":[{"inputs":[{"internalType":"address","name":"trustedCode","type":"address"},{"internalType":"address","name":"by","type":"address"},{"internalType":"uint256","name":"extTimestamp","type":"uint256"}],"name":"isTrustedCode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"trustedCode","type":"address"},{"internalType":"uint256","name":"duration","type":"uint256"}],"name":"trustCodeAt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"trustedCode","type":"address"}],"name":"untrustCodeAt","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"isTrustedCode(address,address,uint256)":"4f940270","trustCodeAt(address,uint256)":"920517e6","untrustCodeAt(address)":"83e5e640"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedCode\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"extTimestamp\",\"type\":\"uint256\"}],\"name\":\"isTrustedCode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedCode\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"trustCodeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"trustedCode\",\"type\":\"address\"}],\"name\":\"untrustCodeAt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Miguel Gomez Carpena\",\"details\":\"Interface of contract CodeTrust\",\"kind\":\"dev\",\"methods\":{\"isTrustedCode(address,address,uint256)\":{\"params\":{\"by\":\"(optional) [sender] the address of the one that is trusting the contract or not (truster?? X-))\",\"extTimestamp\":\"(optional) [block.timestamp] external timestamp to use as time reference\",\"trustedCode\":\"the address of the contract to be checked\"},\"returns\":{\"_0\":\"bool wheater the contract is trusted by \\\"by\\\" address or not\"}},\"trustCodeAt(address,uint256)\":{\"details\":\"it checks if the address is a contract address or a EOA comparing the msg.sender and tx.origin to force having duration or not\",\"params\":{\"duration\":\"(optional) [1] datetime to trust this contract code. Mandatory if this call comes from a EOA. If sender is another contract, can be 1 meaning infinite duration\",\"trustedCode\":\"the address of the contract address to be trusted\"}},\"untrustCodeAt(address)\":{\"params\":{\"trustedCode\":\"the address of the contract to be untrusted\"}}},\"title\":\"(Interface) Code Trust\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedCode(address,address,uint256)\":{\"notice\":\"method to check if a contract is trusted by any address\"},\"trustCodeAt(address,uint256)\":{\"notice\":\"any sender can use this method to trust other address (should be a contract address)\"},\"untrustCodeAt(address)\":{\"notice\":\"simple method to explicitly untrust a previously trusted contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ICodeTrust.sol\":\"ICodeTrust\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ICodeTrust.sol\":{\"keccak256\":\"0xb6c5cfa07c109f72f1afa01dffae1e973286768ecba581a1427c772d70a32571\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f454d884506b2d3d02aa7ee00b5f100513eca9aca1b1dfde694cba4e45774bc\",\"dweb:/ipfs/QmRs9srhgUijRQN9m4PVqvUxZNpTBEvrnmJWbkboRUmUS4\"]}},\"version\":1}"}}}}}