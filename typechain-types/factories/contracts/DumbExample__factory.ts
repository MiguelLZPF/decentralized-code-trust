/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DumbExample,
  DumbExampleInterface,
} from "../../contracts/DumbExample";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICodeTrust",
        name: "systemCodeTrust",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractToCheck",
        type: "address",
      },
    ],
    name: "checkIfTrusted",
    outputs: [
      {
        internalType: "bool",
        name: "trusted",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractToTrust",
        type: "address",
      },
    ],
    name: "trustOneContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104fd3803806104fd833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b6103d4806101296000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806349dbfe821461003b57806375c29b4d1461006b575b600080fd5b61005560048036038101906100509190610224565b610087565b604051610062919061026c565b60405180910390f35b61008560048036038101906100809190610224565b610130565b005b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634f940270836000806040518463ffffffff1660e01b81526004016100e8939291906102e5565b602060405180830381865afa158015610105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101299190610348565b9050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663920517e68260006040518363ffffffff1660e01b815260040161018c929190610375565b600060405180830381600087803b1580156101a657600080fd5b505af11580156101ba573d6000803e3d6000fd5b5050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f1826101c6565b9050919050565b610201816101e6565b811461020c57600080fd5b50565b60008135905061021e816101f8565b92915050565b60006020828403121561023a576102396101c1565b5b60006102488482850161020f565b91505092915050565b60008115159050919050565b61026681610251565b82525050565b6000602082019050610281600083018461025d565b92915050565b610290816101e6565b82525050565b6000819050919050565b6000819050919050565b6000819050919050565b60006102cf6102ca6102c584610296565b6102aa565b6102a0565b9050919050565b6102df816102b4565b82525050565b60006060820190506102fa6000830186610287565b6103076020830185610287565b61031460408301846102d6565b949350505050565b61032581610251565b811461033057600080fd5b50565b6000815190506103428161031c565b92915050565b60006020828403121561035e5761035d6101c1565b5b600061036c84828501610333565b91505092915050565b600060408201905061038a6000830185610287565b61039760208301846102d6565b939250505056fea264697066735822122063d71805f6792be06ff6674863963e5a44661b3c03c698a008c64f48b8a86aea64736f6c634300080d0033";

type DumbExampleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DumbExampleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DumbExample__factory extends ContractFactory {
  constructor(...args: DumbExampleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    systemCodeTrust: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DumbExample> {
    return super.deploy(
      systemCodeTrust,
      overrides || {}
    ) as Promise<DumbExample>;
  }
  override getDeployTransaction(
    systemCodeTrust: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(systemCodeTrust, overrides || {});
  }
  override attach(address: string): DumbExample {
    return super.attach(address) as DumbExample;
  }
  override connect(signer: Signer): DumbExample__factory {
    return super.connect(signer) as DumbExample__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DumbExampleInterface {
    return new utils.Interface(_abi) as DumbExampleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DumbExample {
    return new Contract(address, _abi, signerOrProvider) as DumbExample;
  }
}
