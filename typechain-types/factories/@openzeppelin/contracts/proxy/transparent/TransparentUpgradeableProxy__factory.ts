/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BytesLike,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  TransparentUpgradeableProxy,
  TransparentUpgradeableProxyInterface,
} from "../../../../../@openzeppelin/contracts/proxy/transparent/TransparentUpgradeableProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_logic",
        type: "address",
      },
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "admin_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "changeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "implementation_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052604051620018fe380380620018fe833981810160405281019062000029919062000732565b82816200003f828260006200005b60201b60201c565b505062000052826200009e60201b60201c565b50505062000a9a565b6200006c83620000fc60201b60201c565b6000825111806200007a5750805b1562000099576200009783836200015360201b6200034a1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f620000cf6200018960201b60201c565b82604051620000e0929190620007be565b60405180910390a1620000f981620001ed60201b60201c565b50565b6200010d81620002dd60201b60201c565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b6060620001818383604051806060016040528060278152602001620018d760279139620003b360201b60201c565b905092915050565b6000620001c47fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200049760201b620003771760201c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200025f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002569062000872565b60405180910390fd5b80620002997fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b6200049760201b620003771760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b620002f381620004a160201b620003811760201c565b62000335576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200032c906200090a565b60405180910390fd5b806200036f7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b6200049760201b620003771760201c565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060620003c684620004a160201b60201c565b62000408576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003ff90620009a2565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff168560405162000432919062000a11565b600060405180830381855af49150503d80600081146200046f576040519150601f19603f3d011682016040523d82523d6000602084013e62000474565b606091505b50915091506200048c828286620004c460201b60201c565b925050509392505050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315620004d65782905062000529565b600083511115620004ea5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000520919062000a76565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005718262000544565b9050919050565b620005838162000564565b81146200058f57600080fd5b50565b600081519050620005a38162000578565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620005fe82620005b3565b810181811067ffffffffffffffff8211171562000620576200061f620005c4565b5b80604052505050565b60006200063562000530565b9050620006438282620005f3565b919050565b600067ffffffffffffffff821115620006665762000665620005c4565b5b6200067182620005b3565b9050602081019050919050565b60005b838110156200069e57808201518184015260208101905062000681565b83811115620006ae576000848401525b50505050565b6000620006cb620006c58462000648565b62000629565b905082815260208101848484011115620006ea57620006e9620005ae565b5b620006f78482856200067e565b509392505050565b600082601f830112620007175762000716620005a9565b5b815162000729848260208601620006b4565b91505092915050565b6000806000606084860312156200074e576200074d6200053a565b5b60006200075e8682870162000592565b9350506020620007718682870162000592565b925050604084015167ffffffffffffffff8111156200079557620007946200053f565b5b620007a386828701620006ff565b9150509250925092565b620007b88162000564565b82525050565b6000604082019050620007d56000830185620007ad565b620007e46020830184620007ad565b9392505050565b600082825260208201905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006200085a602683620007eb565b91506200086782620007fc565b604082019050919050565b600060208201905081810360008301526200088d816200084b565b9050919050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000620008f2602d83620007eb565b9150620008ff8262000894565b604082019050919050565b600060208201905081810360008301526200092581620008e3565b9050919050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b60006200098a602683620007eb565b915062000997826200092c565b604082019050919050565b60006020820190508181036000830152620009bd816200097b565b9050919050565b600081519050919050565b600081905092915050565b6000620009e782620009c4565b620009f38185620009cf565b935062000a058185602086016200067e565b80840191505092915050565b600062000a1f8284620009da565b915081905092915050565b600081519050919050565b600062000a428262000a2a565b62000a4e8185620007eb565b935062000a608185602086016200067e565b62000a6b81620005b3565b840191505092915050565b6000602082019050818103600083015262000a92818462000a35565b905092915050565b610e2d8062000aaa6000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100675780634f1ef286146100905780635c60da1b146100ac5780638f283970146100d7578063f851a440146101005761005d565b3661005d5761005b61012b565b005b61006561012b565b005b34801561007357600080fd5b5061008e60048036038101906100899190610904565b610145565b005b6100aa60048036038101906100a59190610996565b6101ab565b005b3480156100b857600080fd5b506100c1610248565b6040516100ce9190610a05565b60405180910390f35b3480156100e357600080fd5b506100fe60048036038101906100f99190610904565b61029f565b005b34801561010c57600080fd5b506101156102f3565b6040516101229190610a05565b60405180910390f35b6101336103a4565b61014361013e610423565b610432565b565b61014d610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361019f5761019a816040518060200160405280600081525060006104af565b6101a8565b6101a761012b565b5b50565b6101b3610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361023a576102358383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505060016104af565b610243565b61024261012b565b5b505050565b6000610252610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102935761028c610423565b905061029c565b61029b61012b565b5b90565b6102a7610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102e7576102e2816104db565b6102f0565b6102ef61012b565b5b50565b60006102fd610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361033e57610337610458565b9050610347565b61034661012b565b5b90565b606061036f8383604051806060016040528060278152602001610dd160279139610527565b905092915050565b6000819050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6103ac610458565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610419576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041090610ac9565b60405180910390fd5b6104216105f4565b565b600061042d6105f6565b905090565b3660008037600080366000845af43d6000803e8060008114610453573d6000f35b3d6000fd5b60006104867fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b610377565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6104b88361064d565b6000825111806104c55750805b156104d6576104d4838361034a565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f610504610458565b82604051610513929190610ae9565b60405180910390a16105248161069c565b50565b606061053284610381565b610571576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056890610b84565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516105999190610c1e565b600060405180830381855af49150503d80600081146105d4576040519150601f19603f3d011682016040523d82523d6000602084013e6105d9565b606091505b50915091506105e982828661077c565b925050509392505050565b565b60006106247f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610377565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610656816107e3565b8073ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a250565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361070b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070290610ca7565b60405180910390fd5b806107387fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610360001b610377565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6060831561078c578290506107dc565b60008351111561079f5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d39190610d1c565b60405180910390fd5b9392505050565b6107ec81610381565b61082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082290610db0565b60405180910390fd5b806108587f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b610377565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d1826108a6565b9050919050565b6108e1816108c6565b81146108ec57600080fd5b50565b6000813590506108fe816108d8565b92915050565b60006020828403121561091a5761091961089c565b5b6000610928848285016108ef565b91505092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261095657610955610931565b5b8235905067ffffffffffffffff81111561097357610972610936565b5b60208301915083600182028301111561098f5761098e61093b565b5b9250929050565b6000806000604084860312156109af576109ae61089c565b5b60006109bd868287016108ef565b935050602084013567ffffffffffffffff8111156109de576109dd6108a1565b5b6109ea86828701610940565b92509250509250925092565b6109ff816108c6565b82525050565b6000602082019050610a1a60008301846109f6565b92915050565b600082825260208201905092915050565b7f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60008201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f7879207461726760208201527f6574000000000000000000000000000000000000000000000000000000000000604082015250565b6000610ab3604283610a20565b9150610abe82610a31565b606082019050919050565b60006020820190508181036000830152610ae281610aa6565b9050919050565b6000604082019050610afe60008301856109f6565b610b0b60208301846109f6565b9392505050565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b6000610b6e602683610a20565b9150610b7982610b12565b604082019050919050565b60006020820190508181036000830152610b9d81610b61565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610bd8578082015181840152602081019050610bbd565b83811115610be7576000848401525b50505050565b6000610bf882610ba4565b610c028185610baf565b9350610c12818560208601610bba565b80840191505092915050565b6000610c2a8284610bed565b915081905092915050565b7f455243313936373a206e65772061646d696e20697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610c91602683610a20565b9150610c9c82610c35565b604082019050919050565b60006020820190508181036000830152610cc081610c84565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610cee82610cc7565b610cf88185610a20565b9350610d08818560208601610bba565b610d1181610cd2565b840191505092915050565b60006020820190508181036000830152610d368184610ce3565b905092915050565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b6000610d9a602d83610a20565b9150610da582610d3e565b604082019050919050565b60006020820190508181036000830152610dc981610d8d565b905091905056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203e88ef57d87e6b14b9cf9ca624b1ec20a3e6c886239b474431b5030e73963d5d64736f6c634300080d0033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type TransparentUpgradeableProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransparentUpgradeableProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransparentUpgradeableProxy__factory extends ContractFactory {
  constructor(...args: TransparentUpgradeableProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<TransparentUpgradeableProxy> {
    return super.deploy(
      _logic,
      admin_,
      _data,
      overrides || {}
    ) as Promise<TransparentUpgradeableProxy>;
  }
  override getDeployTransaction(
    _logic: PromiseOrValue<string>,
    admin_: PromiseOrValue<string>,
    _data: PromiseOrValue<BytesLike>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_logic, admin_, _data, overrides || {});
  }
  override attach(address: string): TransparentUpgradeableProxy {
    return super.attach(address) as TransparentUpgradeableProxy;
  }
  override connect(signer: Signer): TransparentUpgradeableProxy__factory {
    return super.connect(signer) as TransparentUpgradeableProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransparentUpgradeableProxyInterface {
    return new utils.Interface(_abi) as TransparentUpgradeableProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransparentUpgradeableProxy {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransparentUpgradeableProxy;
  }
}
